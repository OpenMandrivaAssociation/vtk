diff -up VTK-9.1.0/Rendering/ContextOpenGL2/vtkOpenGLContextBufferId.cxx.omv~ VTK-9.1.0/Rendering/ContextOpenGL2/vtkOpenGLContextBufferId.cxx
--- VTK-9.1.0/Rendering/ContextOpenGL2/vtkOpenGLContextBufferId.cxx.omv~	2022-03-29 01:12:36.458897662 +0200
+++ VTK-9.1.0/Rendering/ContextOpenGL2/vtkOpenGLContextBufferId.cxx	2022-03-29 01:12:46.256959678 +0200
@@ -139,7 +139,7 @@ vtkIdType vtkOpenGLContextBufferId::GetP
       // Render texture to current write buffer. Texel x,y is rendered at
       // pixel x,y (instead of pixel 0,0 to work around pixel ownership test).
       GLint savedDrawBuffer;
-      glGetIntegerv(GL_DRAW_BUFFER, &savedDrawBuffer);
+      glGetIntegerv(GL_DRAW_BUFFER0, &savedDrawBuffer);
 
       vtkOpenGLState::ScopedglEnableDisable dsaver(ostate, GL_DEPTH_TEST);
       vtkOpenGLState::ScopedglEnableDisable ssaver(ostate, GL_STENCIL_TEST);
diff -up VTK-9.1.0/Rendering/ContextOpenGL2/vtkOpenGLContextDevice2DPrivate.h.omv~ VTK-9.1.0/Rendering/ContextOpenGL2/vtkOpenGLContextDevice2DPrivate.h
--- VTK-9.1.0/Rendering/ContextOpenGL2/vtkOpenGLContextDevice2DPrivate.h.omv~	2022-03-29 01:13:04.753076353 +0200
+++ VTK-9.1.0/Rendering/ContextOpenGL2/vtkOpenGLContextDevice2DPrivate.h	2022-03-29 01:13:14.209135808 +0200
@@ -309,7 +309,7 @@ public:
       this->SavedStencilTest = ostate->GetEnumState(GL_STENCIL_TEST);
       this->SavedBlend = ostate->GetEnumState(GL_BLEND);
       ostate->vtkglGetFloatv(GL_COLOR_CLEAR_VALUE, this->SavedClearColor);
-      ostate->vtkglGetIntegerv(GL_DRAW_BUFFER, &this->SavedDrawBuffer);
+      ostate->vtkglGetIntegerv(GL_DRAW_BUFFER0, &this->SavedDrawBuffer);
     }
   }
 
diff -up VTK-9.1.0/Rendering/OpenGL2/vtkOpenGLRenderWindow.cxx.omv~ VTK-9.1.0/Rendering/OpenGL2/vtkOpenGLRenderWindow.cxx
--- VTK-9.1.0/Rendering/OpenGL2/vtkOpenGLRenderWindow.cxx.omv~	2022-03-29 01:13:52.871377583 +0200
+++ VTK-9.1.0/Rendering/OpenGL2/vtkOpenGLRenderWindow.cxx	2022-03-29 01:14:12.605500212 +0200
@@ -583,8 +583,8 @@ bool vtkOpenGLRenderWindow::GetUsingSRGB
     this->MakeCurrent();
 
     GLint attachment = GL_BACK_LEFT;
-#ifdef GL_DRAW_BUFFER
-    glGetIntegerv(GL_DRAW_BUFFER, &attachment);
+#ifdef GL_DRAW_BUFFER0
+    glGetIntegerv(GL_DRAW_BUFFER0, &attachment);
 #endif
 #ifdef GL_ES_VERSION_2_0
     // GLES only has the GL_BACK color
@@ -644,8 +644,8 @@ int vtkOpenGLRenderWindow::GetColorBuffe
   {
     this->MakeCurrent();
     GLint attachment = GL_BACK_LEFT;
-#ifdef GL_DRAW_BUFFER
-    glGetIntegerv(GL_DRAW_BUFFER, &attachment);
+#ifdef GL_DRAW_BUFFER0
+    glGetIntegerv(GL_DRAW_BUFFER0, &attachment);
 #endif
     // GL seems odd with its handling of left/right.
     // if it says we are using GL_FRONT or GL_BACK
diff -up VTK-9.1.0/Rendering/OpenGL2/vtkOpenGLState.cxx.omv~ VTK-9.1.0/Rendering/OpenGL2/vtkOpenGLState.cxx
--- VTK-9.1.0/Rendering/OpenGL2/vtkOpenGLState.cxx.omv~	2022-03-29 01:14:25.199578210 +0200
+++ VTK-9.1.0/Rendering/OpenGL2/vtkOpenGLState.cxx	2022-03-29 01:15:13.846877672 +0200
@@ -217,8 +217,8 @@ void vtkOpenGLState::CheckState()
     error = true;
   }
   unsigned int sval;
-#ifdef GL_DRAW_BUFFER
-  ::glGetIntegerv(GL_DRAW_BUFFER, iparams);
+#ifdef GL_DRAW_BUFFER0
+  ::glGetIntegerv(GL_DRAW_BUFFER0, iparams);
   sval = cs.DrawBinding.GetDrawBuffer(0);
   if (sval == GL_BACK_LEFT)
   {
@@ -504,8 +504,8 @@ void vtkOpenGLState::vtkglBindFramebuffe
     {
       cs.DrawBinding.Binding = val;
       ::glBindFramebuffer(GL_DRAW_FRAMEBUFFER, val);
-#ifdef GL_DRAW_BUFFER
-      ::glGetIntegerv(GL_DRAW_BUFFER, (int*)&cs.DrawBinding.DrawBuffers[0]);
+#ifdef GL_DRAW_BUFFER0
+      ::glGetIntegerv(GL_DRAW_BUFFER0, (int*)&cs.DrawBinding.DrawBuffers[0]);
 #endif
     }
   }
@@ -1626,8 +1626,8 @@ void vtkOpenGLState::ResetFramebufferBin
 {
   auto& cs = this->Stack.top();
   ::glGetIntegerv(GL_DRAW_FRAMEBUFFER_BINDING, (int*)&cs.DrawBinding.Binding);
-#ifdef GL_DRAW_BUFFER
-  ::glGetIntegerv(GL_DRAW_BUFFER, (int*)&cs.DrawBinding.DrawBuffers[0]);
+#ifdef GL_DRAW_BUFFER0
+  ::glGetIntegerv(GL_DRAW_BUFFER0, (int*)&cs.DrawBinding.DrawBuffers[0]);
 #endif
 
   ::glGetIntegerv(GL_READ_FRAMEBUFFER_BINDING, (int*)&cs.ReadBinding.Binding);
